version: '3.8'
services:
  api:
    environment:
      NODE_ENV: ${NODE_ENV}
      DATABASE_URL: postgres://${TYPEORM_USERNAME}:${TYPEORM_PASSWORD}@postgres:5432/postgres
      PORT: ${APP_PORT}
      POSTGRES_HOST_AUTH_METHOD: trust
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ['yarn', 'run', 'start:${NODE_ENV}']
    env_file:
      - .env
    ports:
      - 8080:3000
    depends_on:
      - postgres
    volumes:
      - .:/nest-app/src/app
      - /nest-app/src/app/node_modules
    restart: always
  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: '${TYPEORM_DATABASE}'
      POSTGRES_USER: ${TYPEORM_USERNAME}
      POSTGRES_PASSWORD: ${TYPEORM_PASSWORD}
      PG_DATA: /var/lib/postgresql/data
    ports:
      - ${APP_PORT}:${POSTGRES_DB_PORT}
      # - 5432:5432
    volumes:
      - ./pgdata/data:/var/lib/postgresql/data
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      POSTGRES_DB: ${TYPEORM_DATABASE}
      POSTGRES_USER: ${TYPEORM_USERNAME}
      POSTGRES_PASSWORD: ${TYPEORM_PASSWORD}
    volumes:
      - ./pgdata/pgadmin:/root/.pgadmin
    ports:
      - '5050:80'
